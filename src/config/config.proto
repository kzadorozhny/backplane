syntax = "proto3";

package config;

message auth {
	message http_basic_t {
		string realm = 1;
		map<string,string> userpass = 2;
	}
	oneof auth_types {
		http_basic_t http_basic = 1;
	}
}

message http_handler {
	// path matching rules are explained here http://golang.org/pkg/net/http/#ServeMux
	string path = 1;
	string backend_name = 2;	
	auth auth = 3;
}

message http_frontend {
	message vhost {
		bool default = 1; //this vhost is default
		repeated string domain = 2;
		repeated http_handler handler = 3;
	}
	string name = 1; 			//required
	string bind_http = 2; 	// required
	repeated vhost host = 3;
	string bind_https = 4;
	repeated string ssl_cert = 5; // PEM-encoded SSL/TLS certificate as string.
	//TODO: check if pattern is malformed
	string ssl_cert_mask = 7; // File mask for PEM-encoded ssl key/cert bundles, like /etc/certs/*.pem
	string server_string = 8; // String returned in HTTP String: header instead of default "Backplane"
}

message server {
	string address = 1;
	int64 weight = 2; //unused yet
	int64 maxconn = 3; //unused yet
}

message http_backend {
	string name = 1;
	repeated server server = 2;
}

message config {
	repeated http_frontend http_frontend = 1;
	repeated http_backend http_backend = 2;
}
